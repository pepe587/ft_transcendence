input {
    tcp {
        port => 5044
        codec => plain
    }
    udp {
        port => 5044
        codec => plain
    }
	file {
		path => "/var/log/postgresql/postgresql.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => "db"
  	}
}

filter {
    # Filtra los logs de nginx
    if [message] =~ /nginx/ {
        mutate {
            add_field => { "source" => "nginx" }
        }
        # Usa un filtro grok ajustado para manejar este formato especÃ­fico de log de nginx
		grok {
			match => { "message" => "<%{INT:syslog5424_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} nginx: %{IPORHOST:remote_addr} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\"" }
		}

        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
            target => "@timestamp"
        }

		# Extrae solo la primera parte del campo request
		mutate {
			add_field => { "first_path" => "%{request}" }
		}

		# Establecer un valor por defecto de "/" si first_path es igual a "%{request}"
		if [first_path] == "%{request}" {
			mutate { replace => { "first_path" => "/" } }
		}

		# Usa un filtro conditional para manejar el primer segmento de la URL
		if [first_path] =~ "^/api/" {
			mutate { gsub => [ "first_path", "^(/api/[^/]*)(/.*)?$", "\1" ] }						# Captura /api/ seguido de la siguiente parte
		} else if [first_path] =~ "^/ws/" {
			mutate { gsub => [ "first_path", "^(/ws/[^/]*)(/.*)?$", "\1" ] }						# Captura /ws/ seguido de la siguiente parte
		} else {
			mutate { gsub => [ "first_path", "^(/[^/]*).*", "\1" ] }								# Captura solo la primera parte en otros casos
		}

    } else if [type] == "db" {
        mutate { add_field => { "source" => "db" } }
    } else {
        mutate { add_field => { "source" => "micro" } }
    }
}


output {
    stdout { codec => rubydebug }
    if [source] == "nginx" {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "nginx_%{+YYYY.MM.dd}"
			user => "${ELASTICSEARCH_USERNAME}"
    		password => "${ELASTICSEARCH_PASSWORD}"
        }
	} else if [source] == "db" {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "db_%{+YYYY.MM.dd}"
            user => "${ELASTICSEARCH_USERNAME}"
            password => "${ELASTICSEARCH_PASSWORD}"
        }
    } else {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "micro_%{+YYYY.MM.dd}"
			user => "${ELASTICSEARCH_USERNAME}"
    		password => "${ELASTICSEARCH_PASSWORD}"
        }
    }
}

